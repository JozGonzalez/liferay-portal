definition {

	macro addAccountEntry {
		Variables.assertDefined(parameterList = ${accountName});

		var portalURL = JSONCompany.getPortalURL();

		if (${accountName} == "Company Name 1") {
			var externalReferenceCode = "0017i00001MQSGdAAP";
		}

		if (${accountName} == "Company Name 2") {
			var externalReferenceCode = "0017i00001MQSAyAAP";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var curl = '''
			${portalURL}/o/headless-admin-user/v1.0/accounts \
				-u test@liferay.com:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${accountName}",
					"externalReferenceCode": "${externalReferenceCode}",
					"partnerCountry": "US",
					"claimPercent": 0.5,
					"currency": "BRL",
					"partnerLevel": "gold",
					"marketingPlan": true,
					"solutionDeliveryCertification": true,
					"renewalARR": 0,
					"newProjectExistingBusiness": 1,
					"aRRAmount": 85000,
					"marketingPerformance": 3,
					"growthARR": 0
				}'
		''';

		var response = JSONCurlUtil.post(${curl});

		echo(${response});
	}

	macro addActivity {
		Variables.assertDefined(parameterList = ${requestId});

		if (!(isSet(accountEntryName))) {
			var accountEntryName = "Company Name 1";
		}

		if (!(isSet(emailAddress))) {
			var emailAddress = "pmu@partner.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var accoundId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountEntryName});
		var portalURL = JSONCompany.getPortalURL();
		var expenseKey = StringUtil.lowerCaseFirstLetter(${expenseOption});

		var expenseKey = StringUtil.replace(${expenseKey}, " ", "");

		var curl = '''
			${portalURL}/o/c/activities \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"activityPromotion":"",
					"ad":"",
					"assetsLiferayDescription":"",
					"assetsLiferayRequired":"",
					"audienceTarget":"",
					"broadcastChannel":"",
					"cta":"",
					"description":"",
					"detailsLeadFollowUp":"",
					"expectedImpressions":"",
					"gatedLandingPage":"",
					"goalOfContent":"",
					"guaranteedImpressions":"",
					"hiringOutsideWriterOrAgency":"",
					"howLiferayBrandUsed":"",
					"keywordsForPPCCampaigns":"",
					"landingPageCopy":"",
					"leadFollowUpStrategies":"",
					"leadGenerated":"false",
					"liferayBranding":"",
					"liferayParticipationRequirements":"",
					"location":"",
					"manySeries":"",
					"marketingActivity":"${activityDescription}",
					"nurtureDripCampaign":"",
					"overallMessageContentCTA":"",
					"primaryThemeOrMessage":"",
					"publication":"",
					"quantity":"",
					"resourcesNecessaryFromLiferay":"",
					"sourceAndSizeOfCallList":"",
					"sourceAndSizeOfInviteeList":"",
					"specificSites":"",
					"targetOfLeads":"",
					"targetOfSends":"",
					"typeMerchandise":"",
					"usingCIABAssets":"",
					"venueName":"",
					"webinarHostPlatform":"",
					"webinarTopic":"",
					"weeksAiring":"",
					"activityStatus":{
						"key":"submitted",
						"name":"Submitted"
					},
					"currency":{
						"key":"BRL",
						"name":"Brazilian Real"
					},
					"budgets":[
						{
							"cost":${budgetValue},
							"expense":{
								"key":"${expenseKey}",
								"name":"${expenseOption}"
							}
						}
					],
					"endDate":"${endDate}",
					"mdfRequestAmount":${totalMDFRequestAmount},
					"name":"${activityName}",
					"startDate":"${startDate}",
					"tactic":{
						"key":"prmtact002prmtct006prmtact003prmtct009prmtact004prmtct008",
						"name":"Other"
					},
					"totalCostOfExpense":${budgetValue},
					"typeActivity":{
						"key":"prmtact004",
						"name":"Miscellaneous Marketing"
					},
					"externalReferenceCode":"${activityExternalReferenceCode}",
					"externalReferenceCodeSF":"${activityExternalReferenceCode}",
					"mdfRequestExternalReferenceCode":"${mdfExternalReferenceCode}",
					"r_accToActs_accountEntryId":${accoundId},
					"r_mdfReqToActs_c_mdfRequestId":${requestId}
				}'
		''';

		var activityId = JSONCurlUtil.post(${curl}, "$.id");

		echo(${activityId});

		return ${activityId};
	}

	macro addActivitySf {
		Variables.assertDefined(parameterList = ${requestId});

		if (!(isSet(accountEntryName))) {
			var accountEntryName = "Company Name 1";
		}

		if (!(isSet(emailAddress))) {
			var emailAddress = "pmu@partner.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var accoundId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountEntryName});
		var portalURL = JSONCompany.getPortalURL();
		var expenseKey = StringUtil.lowerCaseFirstLetter(${expenseOption});

		var expenseKey = StringUtil.replace(${expenseKey}, " ", "");

		var curl = '''
			${portalURL}/o/c/activitysfs \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"activityPromotion":"",
					"ad":"",
					"assetsLiferayDescription":"",
					"assetsLiferayRequired":"",
					"audienceTarget":"",
					"broadcastChannel":"",
					"cta":"",
					"description":"",
					"detailsLeadFollowUp":"",
					"expectedImpressions":"",
					"gatedLandingPage":"",
					"goalOfContent":"",
					"guaranteedImpressions":"",
					"hiringOutsideWriterOrAgency":"",
					"howLiferayBrandUsed":"",
					"keywordsForPPCCampaigns":"",
					"landingPageCopy":"",
					"leadFollowUpStrategies":"",
					"leadGenerated":"false",
					"liferayBranding":"",
					"liferayParticipationRequirements":"",
					"location":"",
					"manySeries":"",
					"marketingActivity":"${activityDescription}",
					"nurtureDripCampaign":"",
					"overallMessageContentCTA":"",
					"primaryThemeOrMessage":"",
					"publication":"",
					"quantity":"",
					"resourcesNecessaryFromLiferay":"",
					"sourceAndSizeOfCallList":"",
					"sourceAndSizeOfInviteeList":"",
					"specificSites":"",
					"targetOfLeads":"",
					"targetOfSends":"",
					"typeMerchandise":"",
					"usingCIABAssets":"",
					"venueName":"",
					"webinarHostPlatform":"",
					"webinarTopic":"",
					"weeksAiring":"",
					"activityStatus":{
						"key":"submitted",
						"name":"Submitted"
					},
					"currency":{
						"key":"BRL",
						"name":"Brazilian Real"
					},
					"budgets":[
						{
							"cost":${budgetValue},
							"expense":{
								"key":"${expenseKey}",
								"name":"${expenseOption}"
							}
						}
					],
					"endDate":"${endDate}",
					"mdfRequestAmount":${totalMDFRequestAmount},
					"name":"${activityName}",
					"startDate":"${startDate}",
					"tactic":{
						"key":"prmtact002prmtct006prmtact003prmtct009prmtact004prmtct008",
						"name":"Other"
					},
					"totalCostOfExpense":${budgetValue},
					"typeActivity":{
						"key":"prmtact004",
						"name":"Miscellaneous Marketing"
					},
					"mdfRequestExternalReferenceCode":"${mdfExternalReferenceCode}",
					"r_accToActs_accountEntryId":${accoundId},
					"r_mdfReqToActs_c_mdfRequestId":${requestId}
				}'
		''';

		var activityExternalReferenceCode = JSONCurlUtil.post(${curl}, "$.externalReferenceCode");

		echo(${activityExternalReferenceCode});

		return ${activityExternalReferenceCode};
	}

	macro addBudget {
		Variables.assertDefined(parameterList = ${activityId});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(emailAddress))) {
			var emailAddress = "pmu@partner.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var curl = '''
			${portalURL}/o/c/budgets \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"cost":${budgetValue},
					"expense":{
						"key":"contentCreation",
						"name":"Content Creation"
					},
					"r_actToBgts_c_activityId":${activityId}
				}'
		''';

		var response = JSONCurlUtil.post(${curl});

		echo(${response});
	}

	macro addMDF {
		Variables.assertDefined(parameterList = ${campaignName});

		if (!(isSet(emailAddress))) {
			var emailAddress = "pmu@partner.com";
		}

		if (!(isSet(accountEntryName))) {
			var accountEntryName = "Company Name 1";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = ${emailAddress});
		var accountId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountEntryName});
		var accountExternalReferenceCode = JSONPRMAPI.getAccountExternalReferenceCode(accountEntryName = ${accountEntryName});
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/mdfrequests \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"accountExternalReferenceCode":"${accountExternalReferenceCode}",
					"additionalOption":{
					},
					"companyName":"${accountEntryName}",
					"country":{
						"key":"global",
						"name":"Global"
					},
					"currency":{
						"key":"BRL",
						"name":"Brazilian Real"
					},
					"emailAddress":"${emailAddress}",
					"externalReferenceCode":"${mdfExternalReferenceCode}",
					"externalReferenceCodeSF":"${mdfExternalReferenceCode}",
					"liferayBusinessSalesGoals":"${goalsOptions}",
					"liferayBusinessSalesGoalsOther":"",
					"liferaysUserIdSF":${userId},
					"maxDateActivity":"${endDate}",
					"mdfRequestStatus":{
						"key":"${mdfRequestStatusKey}",
						"name":"${mdfRequestStatus}"
					},
					"minDateActivity":"${startDate}",
					"overallCampaignDescription":"${campaignDescription}",
					"overallCampaignName":"${campaignName}",
					"r_accToMDFReqs_accountEntryId":${accountId},
					"r_usrToMDFReqs_userId":${userId},
					"targetAudienceRoles":"${targetRolesOptions}",
					"targetMarkets":"${targetMarketOptions}",
					"totalCostOfExpense":${totalCostOfExpense},
					"totalMDFRequestAmount":${totalMDFRequestAmount},
					"submitted":false
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		static var staticRequestId = ${response};

		echo(${response});

		return ${response};
	}

	macro addMDFSf {
		Variables.assertDefined(parameterList = ${campaignName});

		if (!(isSet(emailAddress))) {
			var emailAddress = "pmu@partner.com";
		}

		if (!(isSet(accountEntryName))) {
			var accountEntryName = "Company Name 1";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = ${emailAddress});
		var accountId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountEntryName});
		var accountExternalReferenceCode = JSONPRMAPI.getAccountExternalReferenceCode(accountEntryName = ${accountEntryName});
		var portalURL = JSONCompany.getPortalURL();
		var mdfRequestStatus = StringUtil.lowerCaseFirstLetter(${mdfRequestStatus});

		var mdfRequestStatus = StringUtil.replace(${mdfRequestStatus}, " ", "");

		var curl = '''
			${portalURL}/o/c/mdfrequestsfs \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"accountExternalReferenceCode":"${accountExternalReferenceCode}",
					"companyName":"${accountEntryName}",
					"currency":{
						"key":"BRL",
						"name":"Brazilian Real"
					},
					"emailAddress":"${emailAddress}",
					"liferayBusinessSalesGoals":"${goalsOptions}",
					"liferayBusinessSalesGoalsOther":"",
					"liferaysUserIdSF":${userId},
					"maxDateActivity":"${endDate}",
					"mdfRequestStatus":{
						"key":"${mdfRequestStatusKey}",
						"name":"${mdfRequestStatus}"
					},
					"minDateActivity":"${startDate}",
					"overallCampaignDescription":"${campaignDescription}",
					"overallCampaignName":"${campaignName}",
					"partnerCountry":{
						"key":"US",
						"name":"United States"
					},
					"r_accToMDFReqs_accountEntryERC":"${accountExternalReferenceCode}",
					"r_usrToMDFReqs_userId":${userId},
					"submitted":false,
					"targetAudienceRoles":"${targetRolesOptions}",
					"targetMarkets":"${targetMarketOptions}",
					"totalCostOfExpense":${totalCostOfExpense},
					"totalMDFRequestAmount":${totalMDFRequestAmount}
				}'
		''';

		var mdfExternalReferenceCode = JSONCurlUtil.post(${curl}, "$.externalReferenceCode");

		echo(${mdfExternalReferenceCode});

		return ${mdfExternalReferenceCode};
	}

	macro changeClaimStatus {
		Variables.assertDefined(parameterList = ${claimId});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(emailAddress))) {
			var emailAddress = "cmm@liferaytest.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var curl = '''
			${portalURL}/o/c/mdfclaims/${claimId} \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"mdfClaimStatus": "${statusKey}"
				}'
		''';

		var response = JSONCurlUtil.patch(${curl});

		echo(${response});
	}

	macro changeMDFStatus {
		Variables.assertDefined(parameterList = ${requestId});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(emailAddress))) {
			var emailAddress = "cmm@liferaytest.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var curl = '''
			${portalURL}/o/c/mdfrequests/${requestId} \
				-u ${emailAddress}:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"mdfRequestStatus": "${statusKey}"
				}
			}'
		''';

		var response = JSONCurlUtil.patch(${curl});

		echo(${response});
	}

	macro getAccountExternalReferenceCode {
		Variables.assertDefined(parameterList = ${accountEntryName});

		if (!(isSet(emailAddress))) {
			var emailAddress = "test@liferay.com";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();
		var userId = JSONUserSetter.setUserId(userEmailAddress = ${emailAddress});
		var curl = '''
			${portalURL}/api/jsonws/account.accountentry/get-account-entries \
				-u ${emailAddress}:${password} \
				-d companyId=${companyId} \
				-d status=0 \
				-d <CURL_DATA[start=-1]CURL_DATA> \
				-d <CURL_DATA[end=-1]CURL_DATA> \
				-d -orderByComparator=
		''';

		var accountExternalReferenceCode = JSONCurlUtil.post(${curl}, "$.[?(@['name'] == '${accountEntryName}')]['externalReferenceCode']");

		echo("curl: ${curl}");

		if (${externalReferenceCode} == "") {
			fail("FAIL. Cannot find account entry.");
		}
		else {
			return ${accountExternalReferenceCode};
		}
	}

	macro updateAccount {
		Variables.assertDefined(parameterList = ${accountName});

		var portalURL = JSONCompany.getPortalURL();
		var accoundId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountName});

		if (${accountName} == "Company Name 1") {
			var externalReferenceCode = "0017i00001MQSGdAAP";
		}

		if (${accountName} == "Company Name 2") {
			var externalReferenceCode = "0017i00001MQSAyAAP";
		}

		if (!(isSet(password))) {
			var password = "test";
		}

		var curl = '''
			${portalURL}/o/headless-admin-user/v1.0/accounts/${accoundId} \
				-u test@liferay.com:${password} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${accountName}",
					"externalReferenceCode": "${externalReferenceCode}",
					"partnerCountry": "US",
					"currency": "BRL",
					"marketingPlan": true,
					"solutionDeliveryCertification": true,
					"newProjectExistingBusiness": 1,
					"marketingPerformance": 3,
					"r_prtLvlToAcc_c_partnerLevelERC": "GOLD-PRTLVL"
				}'
		''';

		var response = JSONCurlUtil.patch(${curl});

		echo(${response});
	}

}