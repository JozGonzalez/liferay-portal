@component-name = "portal-workflow-ee"
@ignore = "true"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Kaleo Designer";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Workflow.tearDownSpecificWorkflowDefinition(workflowDefinitionTitle = "Edited Workflow Definition");

			Workflow.tearDownWorkflowDefinitions();
		}
	}

	@description = "This is a use case for LPS-37209."
	@priority = 4
	test ConfigureTaskTimersViaSourceTab {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.uploadDefinition(
			workflowDefinitionFile = "task-timers-workflow-definition.xml",
			workflowDefinitionTitle = "New Workflow Definition Title");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "New Workflow Definition Title");

		KaleoDesigner.selectNode(nodeNodeLabel = "__TIMER_REVIEW__");

		KaleoDesigner.viewNodeTimer(
			blockerName = "timer 1 action",
			blocking = "false",
			durationTime1 = 1,
			durationTime2 = 2,
			timerName = "timer 1");
	}

	@description = "This is a use case for LPS-37209."
	@priority = 4
	test ConfigureTaskTimersViaViewTab {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "New Workflow Definition Title");

		KaleoDesigner.selectNode(nodeNodeLabel = "StartNode");

		KaleoDesigner.deleteNode(nodeNodeLabel = "StartNode");

		KaleoDesigner.selectNode(nodeNodeLabel = "EndNode");

		KaleoDesigner.deleteNode(nodeNodeLabel = "EndNode");

		KaleoDesigner.addNodeViaViewTab(
			nodeDescription = "Task Node Description",
			nodeName = "Task",
			nodeNodeLabel = "Task",
			nodeType = "task");

		KaleoDesigner.selectNode(nodeNodeLabel = "Task");

		KaleoDesigner.editNodeTimer(
			blockerDescription = "Blocker Description",
			blockerName = "Blocker Name",
			blockerScript = "Test Script",
			durationScale1 = "Hour",
			durationScale2 = "Hour",
			durationTime1 = 5,
			durationTime2 = 6,
			timerDescription = "Timer Description",
			timerName = "Timer Name");

		for (var iterator : list "1,2,3,4,5,6,7,8,9,10") {
			KaleoDesigner.editSourceXML(
				kdSourceXml = " ",
				line = 12);
		}

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<name>Timer Name</name>''',
			line = 17);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<description>Timer Description</description>''',
			line = 18);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<duration>5</duration>''',
			line = 20);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<scale>hour</scale>''',
			line = 21);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<duration>6</duration>''',
			line = 24);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<scale>hour</scale>''',
			line = 25);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<blocking>true</blocking>''',
			line = 27);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<timer-action>''',
			line = 29);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<name>Blocker Name</name>''',
			line = 30);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<description>Blocker Description</description>''',
			line = 31);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''Test Script''',
			line = 33);

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<script-language>groovy</script-language>''',
			line = 35);
	}

	@description = "This is a use case for LPS-71924."
	@priority = 5
	test PublishDefaultWorkflowDefinition {
		property environment.acceptance = "true";
		property operating.system.types = "alpine,amazonlinux,centos,debian,fedora,orcllinux,osx,redhat,rockylinux,solaris,suse,ubuntu,windows";
		property portal.acceptance = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "New Workflow Definition Title");

		for (var iterator : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14") {
			var isLessThan10 = MathUtil.isLessThanOrEqualTo(${iterator}, 10);

			if (${isLessThan10} == "true") {
				KaleoDesigner.editSourceXML(
					kdSourceXml = " ",
					line = 11);
			}
			else {
				KaleoDesigner.editSourceXML(
					kdSourceXml = " ",
					line = 26);
			}
		}

		KaleoDesigner.viewSourceXMLLine(
			kdSourceXml = '''<script-language>groovy</script-language>''',
			line = 36);

		PortletEntry.publish();
	}

	@description = "This is a use case for LPS-48590."
	@priority = 4
	test ViewSourceXMLNotErasedWhenInvalid {
		property portal.acceptance = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "New Workflow Definition Title");

		KaleoDesigner.editSourceXML(
			kdSourceXml = " ",
			line = 27);

		KaleoDesigner.viewViewTab();

		KaleoDesigner.viewNodeNotPresent(nodeNodeLabel = "EndNode");

		KaleoDesigner.editSourceXML(
			kdSourceXml = '''</transition></transitions>''',
			line = 27);

		KaleoDesigner.viewViewTab();

		KaleoDesigner.viewNodePresent(nodeNodeLabel = "EndNode");

		PortletEntry.publish();
	}

}