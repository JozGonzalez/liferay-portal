@component-name = "portal-wcm"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a new site") {
			HeadlessSite.addSite(siteName = "Test Site Name");
		}

		task ("Add a company Object with a Text field") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Purchase Order",
				objectName = "PurchaseOrder",
				pluralLabelName = "Purchase Orders");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "Text",
				fieldLabelName = "Name",
				fieldName = "name",
				fieldType = "String",
				isRequired = "false",
				objectName = "PurchaseOrder");

			ObjectAdmin.publishObjectViaAPI(objectName = "PurchaseOrder");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			ObjectAdmin.deleteObjectViaAPI(objectName = "PurchaseOrder");
		}
	}

	@description = "This is a test for LPS-189534. The site administrater cannot select the form type fragments for Submit Button field type."
	@priority = 3
	test CannotSelectFormTypeFragmentsForSubmitButtonFieldType {
		task ("When the page designer selects form type fragments for Submit Button field type") {
			task ("Go to fragment admin configuration") {
				FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

				LexiconEntry.gotoHeaderMenuItem(menuItem = "Configuration");
			}

			task ("Select the fragment from Form Components") {
				Click(
					key_class = "btn-secondary",
					key_index = 11,
					locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				LexiconCard.clickCardTitle(card = "Form Components");
			}
		}

		task ("Then assert there's only Submit Button displays") {
			LexiconCard.viewCardPresent(card = "Submit Button");

			for (var fragmentName : list "CAPTCHA,Checkbox,Date,File Upload,Multiselect List,Numeric Input,Rich Text Input,Select from List,Text Input,Textarea") {
				LexiconCard.viewCardNotPresent(card = ${fragmentName});
			}
		}
	}

	@description = "This is a test for LPS-189534. The site administrater could select the default Submit Button fragment in Form."
	@priority = 4
	test CanSelectDefaultSubmitButtonFragmentInForm {
		task ("Given editing the Submit Field type in fragment admin") {
			task ("Add a submit fragment") {
				JSONFragment.addFragmentCollection(
					groupName = "Test Site Name",
					name = "Fragment Set Name");

				var htmlSnippet = FragmentsAPI.getFragmentFileContent(fileName = "submit_configuration.html");
				var jsonSnippet = FragmentsAPI.getFragmentFileContent(fileName = "submit_configuration.json");

				JSONFragment.addSection(
					collectionName = "Fragment Set Name",
					configuration = ${jsonSnippet},
					fragmentStatus = "Approved",
					groupName = "Test Site Name",
					html = ${htmlSnippet},
					name = "Submit Fragment Example");
			}

			task ("View the new Submit Button is selected in Submit Field type selector") {
				FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

				LexiconEntry.gotoHeaderMenuItem(menuItem = "Configuration");

				FragmentsAdmin.viewFormFragementForEachFieldType(
					fieldType = "Submit Button",
					formFragmentName = "Submit Button");
			}

			task ("Open the Select Fragment modal for Submit Button field type") {
				Click(
					key_class = "btn-secondary",
					key_index = 11,
					locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");
			}

			task ("Select the new fragment from current site") {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				Click(
					key_navItem = "Test Site Name",
					locator1 = "NavBar#NAV_ITEM_LINK");

				LexiconCard.clickCardTitle(card = "Fragment Set Name");

				LexiconCard.clickCard(card = "Submit Fragment Example");
			}

			task ("View the new submit fragment is shown in Form Fragment selector for Text field type and save") {
				SelectFrameTop();

				FragmentsAdmin.viewFormFragementForEachFieldType(
					fieldType = "Submit Button",
					formFragmentName = "Submit Fragment Example");

				Button.clickSave();
			}
		}

		task ("When the page designer maps the Form Container to an entity with text field") {
			task ("Add a Form Container framgment to content page") {
				JSONLayout.addPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					type = "content");

				ContentPagesNavigator.openEditContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				PageEditor.addFragment(
					collectionName = "Form Components",
					fragmentName = "Form Container");
			}

			task ("Map the Form Container to the object") {
				PageEditor.editFormContainer(
					contentType = "Purchase Order",
					panel = "General");
			}
		}

		task ("Then the sumbimit button is changed in form container") {
			task ("View the new fragment is shown in Form Container and publish") {
				AssertElementPresent(
					index = 1,
					key_fragmentName = "Submit Fragment Example",
					locator1 = "Fragment#FRAGMENT_LABEL");

				PageEditor.publish();
			}

			task ("Navigate to the content page at view mode") {
				ContentPagesNavigator.openViewContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");
			}

			task ("Assert can submit the form with the new sumbmit button successfully") {
				Type(
					key_text = "Name",
					locator1 = "TextInput#ANY",
					value1 = "test");

				Button.clickSubmitButton();

				AssertTextPresent(value1 = "Thank you. Your information was successfully received.");
			}
		}
	}

	@description = "This is a test for LPS-151754. The page designer can configure and map the Submit Button on content page."
	@priority = 4
	test ConfigureSubmitButtonOnContentPage {
		task ("Given a page designer has a Form Container on content page") {
			task ("Add a web content") {
				JSONWebcontent.addWebContent(
					content = "Continue",
					groupName = "Test Site Name",
					title = "Web Content Title");
			}

			task ("Add a Form Container framgment to content page") {
				JSONLayout.addPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					type = "content");

				ContentPagesNavigator.openEditContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				PageEditor.addFragment(
					collectionName = "Form Components",
					fragmentName = "Form Container");
			}
		}

		task ("When the page designer maps the Form Container to an entity with text field") {
			PageEditor.editFormContainer(
				contentType = "Purchase Order",
				panel = "General");
		}

		task ("Then the page designer could configure the Submit Button fragment") {
			task ("Change the Type of Submit Button to Secondary") {
				PageEditor.gotoConfiguration(fragmentName = "Submit Button");

				PageEditor.configureFragment(style = "Secondary");

				PageEditor.viewFragmentStyle(
					fragmentName = "Button",
					style = "secondary");
			}

			task ("Change the Size of Submit Button to Small") {
				PageEditor.configureFragment(size = "Small");

				PageEditor.viewFragmentStyle(
					fragmentName = "Button",
					size = "sm");
			}

			task ("Edit the inline text of Submit Button") {
				PageEditor.editFragmentText(
					className = "button",
					fragmentName = "Submit Button",
					id = "text",
					text = "Invoke");

				PageEditor.viewFragmentEditableText(
					className = "button",
					editableText = "Invoke",
					fragmentName = "Submit Button",
					id = "text");
			}

			task ("Map the Submit Button to the Content field") {
				PageEditorMapping.gotoEditableFieldMapping(
					className = "button",
					fragmentName = "Submit Button",
					id = "text");

				PageEditorMapping.mapEditableFieldToAsset(
					entryTitle = "Web Content Title",
					navItem = "Web Content");

				Select(
					locator1 = "PageEditorEditableLink#FIELD",
					value1 = "Content");

				PageEditor.viewFragmentEditableText(
					className = "button",
					editableText = "Continue",
					fragmentName = "Submit Button",
					id = "text");
			}
		}
	}

	@description = "This is a test for LPS-189534. The site administrater cannot see empty fragment sets in Select Fragment modal of Submit Button field type."
	@priority = 3
	test ViewEmptyFragmentSetsAreNotShownWhenConfiguringDefaultSubmitButtonInFragmentAdmin {
		task ("Given adding a fragment set with no fragment") {
			JSONFragment.addFragmentCollection(
				groupName = "Test Site Name",
				name = "Fragment Set Name");
		}

		task ("When the page designer selects a fragment set for Submit Button field type") {
			task ("Go to fragment admin configuration") {
				FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

				LexiconEntry.gotoHeaderMenuItem(menuItem = "Configuration");
			}

			task ("Select the fragment from Form Components") {
				Click(
					key_class = "btn-secondary",
					key_index = 11,
					locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");
			}
		}

		task ("Then assert empty fragment sets are not shown") {
			for (var fragmentSetName : list "Cookier Banner, Navigation Bars") {
				LexiconCard.viewCardNotPresent(card = ${fragmentSetName});
			}

			Click(
				key_navItem = "Test Site Name",
				locator1 = "NavBar#NAV_ITEM_LINK");

			LexiconCard.viewCardNotPresent(card = "Fragment Set Name");
		}
	}

	@description = "This is a test for LPS-151754. View warning message when publish content page with hidden Submit Button."
	@priority = 4
	test ViewWarningMessageWhenPublishContentPageWithHiddenSubmitButton {
		task ("Given a page designer has a Form Container with hidden Submit Button") {
			task ("Add a Form Container framgment to content page") {
				JSONLayout.addPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					type = "content");

				ContentPagesNavigator.openEditContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				PageEditor.addFragment(
					collectionName = "Form Components",
					fragmentName = "Form Container");

				PageEditor.editFormContainer(
					contentType = "Purchase Order",
					panel = "General");
			}

			task ("Delete the Text Input fragment") {
				PageEditor.removeFragment(fragmentName = "Text Input");
			}

			task ("Hide the Submit Button") {
				PageEditor.hideFragmentViaPageStyles(fragmentName = "Submit Button");

				PageEditor.viewFragmentNotPresent(fragmentName = "Submit Button");
			}
		}

		task ("When the page designer publishes the page") {
			Button.click(button = "Publish");
		}

		task ("Then the page designer sees warning message") {
			Modal.publish(warningMessage = "Purchase Order form has a hidden or missing submit button. If you continue, your users may not be able to submit the form. Are you sure you want to publish it?");
		}

		task ("When the page designer accesses to content page at view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("Then the page designer cannot see the Submit Button") {
			AssertNotVisible(
				fragmentName = "button",
				id = "text",
				index = 1,
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT");
		}

		task ("When the page designer publishes the page after unhiding the Submit Button") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.gotoTab(tabName = "Browser");

			Click(
				key_nodeName = "Form Container",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_COLLAPSED");

			Click(
				key_nodeName = "Submit Button",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE");

			PageEditor.configureFragment(hideFragment = "false");

			PageEditor.viewFragmentEditableText(
				className = "button",
				editableText = "Submit",
				fragmentName = "Submit Button",
				id = "text");

			Button.click(button = "Publish");
		}

		task ("Then the page designer cannot see warning message") {
			AssertElementNotPresent(locator1 = "Modal#BODY");

			Alert.viewSuccessMessage();
		}

		task ("When the page designer accesses to content page at view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("Then the page designer sees the Submit Button") {
			ContentPages.viewFragmentText(
				fragmentName = "button",
				id = "text",
				text = "Submit");
		}

		task ("When the page designer deletes the Submit Button in page editor") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.removeFragment(fragmentName = "Submit Button");
		}

		task ("Then the page designer sees the Form Container is empty") {
			AssertVisible(
				key_fragmentName = "Form Container",
				key_messageInfo = "Place fragments here.",
				key_position = 1,
				locator1 = "Fragment#NO_FRAGMENTS_MESSAGE");
		}
	}

	@description = "This is a test for LPS-189534. The site administrater should see warning message when publish form content page without submit type fragment."
	@priority = 3
	test ViewWarningMessageWhenPublishingFormContentPageWithoutSubmitTypeFragment {
		task ("Given the sumbmit button is configured to a heading fragment in fragment admin") {
			task ("Go to fragment admin configuration") {
				FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

				LexiconEntry.gotoHeaderMenuItem(menuItem = "Configuration");
			}

			task ("Select the heading fragment from Basic Components") {
				Click(
					key_class = "btn-secondary",
					key_index = 11,
					locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				LexiconCard.clickCardTitle(card = "Basic Components");

				LexiconCard.clickCard(card = "Heading");
			}

			task ("View the Heading fragment is shown in Form Fragment selector for Text field type and save") {
				SelectFrameTop();

				FragmentsAdmin.viewFormFragementForEachFieldType(
					fieldType = "Submit Button",
					formFragmentName = "Heading");

				Button.clickSave();
			}
		}

		task ("When the page designer maps the Form Container to an entity with text field") {
			task ("Add a Form Container framgment to content page") {
				JSONLayout.addPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					type = "content");

				ContentPagesNavigator.openEditContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				PageEditor.addFragment(
					collectionName = "Form Components",
					fragmentName = "Form Container");
			}

			task ("Map the Form Container to the object") {
				PageEditor.editFormContainer(
					contentType = "Purchase Order",
					panel = "General");
			}
		}

		task ("Then there's Submit Button Missing warning message shown when publish the content page") {
			task ("View the new fragment is shown in Form Container and publish") {
				AssertElementPresent(
					index = 1,
					key_fragmentName = "Heading",
					locator1 = "Fragment#FRAGMENT_LABEL");

				Button.click(button = "Publish");
			}

			task ("Assert there's Submit Button Missing warning message shown") {
				AssertTextEquals(
					index = 1,
					locator1 = "Modal#BODY_MESSAGE",
					value1 = "Purchase Order form has a hidden or missing submit button. If you continue, your users may not be able to submit the form. Are you sure you want to publish it?");
			}
		}
	}

}